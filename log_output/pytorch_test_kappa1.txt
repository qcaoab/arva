Starting at: 
2022-10-24 12:19:34

 Random seed:  1  



############# Defined asset basket #################
timeseries_basket.keys() = 
dict_keys(['basket_type', 'basket_id', 'basket_desc', 'basket_label', 'basket_columns', 'basket_timeseries_names'])
timeseries_basket['basket_type'] = asset
timeseries_basket['basket_id'] = basic_T30_VWD
timeseries_basket['basket_desc'] = CRSP data: T30 and VWD
timeseries_basket['basket_columns'] = 
['T30_real_ret', 'VWD_real_ret']
############# End: defined asset  basket #################
-----------------------------------------------
No need to read market data.
-----------------------------------------------
5.0% of MC simulations done.
10.0% of MC simulations done.
15.0% of MC simulations done.
20.0% of MC simulations done.
25.0% of MC simulations done.
30.0% of MC simulations done.
35.0% of MC simulations done.
40.0% of MC simulations done.
45.0% of MC simulations done.
50.0% of MC simulations done.
55.00000000000001% of MC simulations done.
60.0% of MC simulations done.
65.0% of MC simulations done.
70.0% of MC simulations done.
75.0% of MC simulations done.
80.0% of MC simulations done.
85.0% of MC simulations done.
90.0% of MC simulations done.
95.0% of MC simulations done.
100.0% of MC simulations done.
--------------------------------------------------------------------------------------------------
Neural_Network object 'obj' has instance attribute obj.layers.
obj.layers is a list of 'Neural_Network_Layer' objects with following attributes:

/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
  obj.layers[layer_id] layer_id   description n_nodes activation x_l(weights)  \
0        obj.layers[0]        0   input_layer       2       None         None   
1        obj.layers[1]        1  hidden_layer    None       None         None   
2        obj.layers[2]        2  hidden_layer    None       None         None   
3        obj.layers[3]        3  hidden_layer    None       None         None   
4        obj.layers[4]        4  hidden_layer    None       None         None   
5        obj.layers[5]        5  output_layer       2       None         None   

  add_bias b_l(biases)  
0    False        None  
1    False        None  
2    False        None  
3    False        None  
4    False        None  
5    False        None  

 Run 'update_layer' method of Neural_Network object to change layer attributes.
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Neural_Network object 'obj' has instance attribute obj.layers.
obj.layers is a list of 'Neural_Network_Layer' objects with following attributes:

/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
  obj.layers[layer_id] layer_id   description n_nodes        activation  \
0        obj.layers[0]        0   input_layer       2              None   
1        obj.layers[1]        1  hidden_layer       4  logistic_sigmoid   
2        obj.layers[2]        2  hidden_layer       4  logistic_sigmoid   
3        obj.layers[3]        3  hidden_layer       4  logistic_sigmoid   
4        obj.layers[4]        4  hidden_layer       4  logistic_sigmoid   
5        obj.layers[5]        5  output_layer       2           softmax   

  x_l(weights) add_bias b_l(biases)  
0         None    False        None  
1       (2, 4)    False        None  
2       (4, 4)    False        None  
3       (4, 4)    False        None  
4       (4, 4)    False        None  
5       (4, 2)    False        None  

 Run 'update_layer' method of Neural_Network object to change layer attributes.
--------------------------------------------------------------------------------------------------
  obj.layers[layer_id]  layer_id   description  n_nodes        activation  \
0        obj.layers[0]         0   input_layer        2              None   
0        obj.layers[1]         1  hidden_layer        4  logistic_sigmoid   
0        obj.layers[2]         2  hidden_layer        4  logistic_sigmoid   
0        obj.layers[3]         3  hidden_layer        4  logistic_sigmoid   
0        obj.layers[4]         4  hidden_layer        4  logistic_sigmoid   
0        obj.layers[5]         5  output_layer        2           softmax   

  x_l(weights)  add_bias b_l(biases)  
0         None     False        None  
0       (2, 4)     False        None  
0       (4, 4)     False        None  
0       (4, 4)     False        None  
0       (4, 4)     False        None  
0       (4, 2)     False        None  
Pytorch NN pbject created from original NN class. Change            original NN object to change structure.
-----------------------------------------------
Selected results: ConstProp_strategy on TRAINING dataset
W_T_mean: 1261.0933778858873
W_T_median: 1222.5216402372002
W_T_pctile_5: 834.4055321177691
W_T_CVAR_5_pct: 748.3017793876664
-----------------------------------------------
/home/marcchen/Documents/researchcode/fun_construct_Feature_vector.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  wealth_n = torch.tensor(wealth_n, device=params["device"])
2.0% of gradient descent iterations done. Method = A
objective value function right now is: -2021.611012315751
4.0% of gradient descent iterations done. Method = A
objective value function right now is: -2024.9719095085413
6.0% of gradient descent iterations done. Method = A
objective value function right now is: -2037.0062193541942
8.0% of gradient descent iterations done. Method = A
objective value function right now is: -2055.104377689476
10.0% of gradient descent iterations done. Method = A
objective value function right now is: -2067.8352251675014
12.0% of gradient descent iterations done. Method = A
objective value function right now is: -2080.5114756941357
14.000000000000002% of gradient descent iterations done. Method = A
objective value function right now is: -2087.207501330007
16.0% of gradient descent iterations done. Method = A
objective value function right now is: -2089.4809211410616
18.0% of gradient descent iterations done. Method = A
objective value function right now is: -2090.485626055646
20.0% of gradient descent iterations done. Method = A
objective value function right now is: -2090.9005515908893
22.0% of gradient descent iterations done. Method = A
objective value function right now is: -2091.3636024134266
24.0% of gradient descent iterations done. Method = A
objective value function right now is: -2091.660589504522
26.0% of gradient descent iterations done. Method = A
objective value function right now is: -2091.8772833707835
28.000000000000004% of gradient descent iterations done. Method = A
objective value function right now is: -2092.0209412858144
30.0% of gradient descent iterations done. Method = A
objective value function right now is: -2092.2426117989817
32.0% of gradient descent iterations done. Method = A
objective value function right now is: -2092.3641145228994
34.0% of gradient descent iterations done. Method = A
objective value function right now is: -2092.377598229805
36.0% of gradient descent iterations done. Method = A
objective value function right now is: -2092.647121480624
38.0% of gradient descent iterations done. Method = A
objective value function right now is: -2092.761655036178
40.0% of gradient descent iterations done. Method = A
objective value function right now is: -2092.8898610310334
42.0% of gradient descent iterations done. Method = A
objective value function right now is: -2093.019384482867
44.0% of gradient descent iterations done. Method = A
objective value function right now is: -2093.101457262123
46.0% of gradient descent iterations done. Method = A
objective value function right now is: -2093.20342582956
48.0% of gradient descent iterations done. Method = A
objective value function right now is: -2093.1615868601543
50.0% of gradient descent iterations done. Method = A
objective value function right now is: -2093.410706413465
52.0% of gradient descent iterations done. Method = A
objective value function right now is: -2093.4053264716204
54.0% of gradient descent iterations done. Method = A
objective value function right now is: -2093.5876394746147
56.00000000000001% of gradient descent iterations done. Method = A
objective value function right now is: -2093.6727862208977
57.99999999999999% of gradient descent iterations done. Method = A
objective value function right now is: -2093.832241187027
60.0% of gradient descent iterations done. Method = A
objective value function right now is: -2093.9201414983427
62.0% of gradient descent iterations done. Method = A
objective value function right now is: -2094.0216506239476
64.0% of gradient descent iterations done. Method = A
objective value function right now is: -2094.1237651916504
66.0% of gradient descent iterations done. Method = A
objective value function right now is: -2094.2406838487645
68.0% of gradient descent iterations done. Method = A
objective value function right now is: -2094.3484852900165
70.0% of gradient descent iterations done. Method = A
objective value function right now is: -2094.509512025477
72.0% of gradient descent iterations done. Method = A
objective value function right now is: -2094.4103812475605
74.0% of gradient descent iterations done. Method = A
objective value function right now is: -2094.7130978446403
76.0% of gradient descent iterations done. Method = A
objective value function right now is: -2094.902667817317
78.0% of gradient descent iterations done. Method = A
objective value function right now is: -2094.763002352478
80.0% of gradient descent iterations done. Method = A
objective value function right now is: -2095.2176364043667
82.0% of gradient descent iterations done. Method = A
objective value function right now is: -2095.45078898018
84.0% of gradient descent iterations done. Method = A
objective value function right now is: -2095.4900468506294
86.0% of gradient descent iterations done. Method = A
objective value function right now is: -2095.802517469203
88.0% of gradient descent iterations done. Method = A
objective value function right now is: -2095.8677415810766
90.0% of gradient descent iterations done. Method = A
objective value function right now is: -2096.1102724980506
92.0% of gradient descent iterations done. Method = A
objective value function right now is: -2096.259796312625
94.0% of gradient descent iterations done. Method = A
objective value function right now is: -2096.4006657708433
96.0% of gradient descent iterations done. Method = A
objective value function right now is: -2096.590854331004
98.0% of gradient descent iterations done. Method = A
objective value function right now is: -2096.7511444229294
100.0% of gradient descent iterations done. Method = A
objective value function right now is: -2096.8234967987073
NN weights: [-2.0558658  -2.49156     0.91291106 -2.7384572   2.3166258   1.1277335
 -1.2145392   2.4883368  -0.9263037  -0.31691897 -1.1959562   2.529004
 -0.61236906 -0.691831   -1.0902449   3.1853786   0.6198599   0.72664505
  0.4692945  -2.8270705  -0.69295526 -1.2395563  -0.45413193  3.457494
  1.2164112   1.7387762   2.526538    0.91008997  1.7763983   1.2083958
  1.97444     1.8982018   2.4697475   0.9550112   1.7096033   2.3097806
 -0.25802273 -1.8396002  -2.7426088  -1.3135059   1.0348597   2.2701175
 -1.703643   -0.3772189  -0.00503397  1.1039724  -3.0843039  -2.9187112
  0.65635073  1.3330381  -4.037836   -4.1341386   0.89764714  1.0457889
 -2.030302   -1.3442177   1.1338933  -1.0352725   0.18704428 -0.9591869
 -0.23921485  1.1140445   2.0345914   1.074851  ]
Minimum obj value:-2096.50888772229
Optimal xi: 27.20619
/home/marcchen/Documents/researchcode/fun_train_NN.py:236: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  res_ALL_dataframe = res_ALL_dataframe.append(res_ALL[key]["summary_df"], ignore_index=True)
/home/marcchen/Documents/researchcode/fun_train_NN.py:248: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  res_ALL_dataframe = res_ALL_dataframe.append(res_BEST_temp["summary_df"], ignore_index=True)
-----------------------------------------------
Selected results: NN-strategy-on-TRAINING dataset
W_T_mean: 1447.3528943474632
W_T_median: 1232.072575513309
W_T_pctile_5: 738.5660908698526
W_T_CVAR_5_pct: 649.1704419037096
F value: -2096.50888772229
-----------------------------------------------
[0.0, 150.0, 300.0, 450.0, 600.0, 750.0, 900.0, 1050.0, 1200.0, 1350.0, 1500.0]
[0.0, 150.0, 300.0, 450.0, 600.0, 750.0, 900.0, 1050.0, 1200.0, 1350.0, 1500.0]
/home/marcchen/Documents/researchcode/fun_Plot_NN_control_DataHeatmaps.py:157: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.savefig(fig_filename, format=save_Figures_format, bbox_inches="tight")
-----------------------------------------------
Just FINISHED: 
Asset basket ID: basic_T30_VWD
Objective function: mean_cvar_single_level
Tracing param: 1.0
F value: -2096.50888772229
Rebalancing frequency: 20
batch size: 500
-----------------------------------------------
