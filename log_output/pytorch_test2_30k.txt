Starting at: 
2022-10-20 20:08:24

 Random seed:  1  



############# Defined asset basket #################
timeseries_basket.keys() = 
dict_keys(['basket_type', 'basket_id', 'basket_desc', 'basket_label', 'basket_columns', 'basket_timeseries_names'])
timeseries_basket['basket_type'] = asset
timeseries_basket['basket_id'] = basic_T30_VWD
timeseries_basket['basket_desc'] = CRSP data: T30 and VWD
timeseries_basket['basket_columns'] = 
['T30_real_ret', 'VWD_real_ret']
############# End: defined asset  basket #################
-----------------------------------------------
No need to read market data.
-----------------------------------------------
5.0% of MC simulations done.
10.0% of MC simulations done.
15.0% of MC simulations done.
20.0% of MC simulations done.
25.0% of MC simulations done.
30.0% of MC simulations done.
35.0% of MC simulations done.
40.0% of MC simulations done.
45.0% of MC simulations done.
50.0% of MC simulations done.
55.00000000000001% of MC simulations done.
60.0% of MC simulations done.
65.0% of MC simulations done.
70.0% of MC simulations done.
75.0% of MC simulations done.
80.0% of MC simulations done.
85.0% of MC simulations done.
90.0% of MC simulations done.
95.0% of MC simulations done.
100.0% of MC simulations done.
--------------------------------------------------------------------------------------------------
Neural_Network object 'obj' has instance attribute obj.layers.
obj.layers is a list of 'Neural_Network_Layer' objects with following attributes:

/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
  obj.layers[layer_id] layer_id   description n_nodes activation x_l(weights)  \
0        obj.layers[0]        0   input_layer       2       None         None   
1        obj.layers[1]        1  hidden_layer    None       None         None   
2        obj.layers[2]        2  hidden_layer    None       None         None   
3        obj.layers[3]        3  hidden_layer    None       None         None   
4        obj.layers[4]        4  hidden_layer    None       None         None   
5        obj.layers[5]        5  output_layer       2       None         None   

  add_bias b_l(biases)  
0    False        None  
1    False        None  
2    False        None  
3    False        None  
4    False        None  
5    False        None  

 Run 'update_layer' method of Neural_Network object to change layer attributes.
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
Neural_Network object 'obj' has instance attribute obj.layers.
obj.layers is a list of 'Neural_Network_Layer' objects with following attributes:

/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
/home/marcchen/Documents/researchcode/class_Neural_Network.py:344: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  layers_info_df = layers_info_df.append(layer_dict, ignore_index=True)
  obj.layers[layer_id] layer_id   description n_nodes        activation  \
0        obj.layers[0]        0   input_layer       2              None   
1        obj.layers[1]        1  hidden_layer       4  logistic_sigmoid   
2        obj.layers[2]        2  hidden_layer       4  logistic_sigmoid   
3        obj.layers[3]        3  hidden_layer       4  logistic_sigmoid   
4        obj.layers[4]        4  hidden_layer       4  logistic_sigmoid   
5        obj.layers[5]        5  output_layer       2           softmax   

  x_l(weights) add_bias b_l(biases)  
0         None    False        None  
1       (2, 4)    False        None  
2       (4, 4)    False        None  
3       (4, 4)    False        None  
4       (4, 4)    False        None  
5       (4, 2)    False        None  

 Run 'update_layer' method of Neural_Network object to change layer attributes.
--------------------------------------------------------------------------------------------------
  obj.layers[layer_id]  layer_id   description  n_nodes        activation  \
0        obj.layers[0]         0   input_layer        2              None   
0        obj.layers[1]         1  hidden_layer        4  logistic_sigmoid   
0        obj.layers[2]         2  hidden_layer        4  logistic_sigmoid   
0        obj.layers[3]         3  hidden_layer        4  logistic_sigmoid   
0        obj.layers[4]         4  hidden_layer        4  logistic_sigmoid   
0        obj.layers[5]         5  output_layer        2           softmax   

  x_l(weights)  add_bias b_l(biases)  
0         None     False        None  
0       (2, 4)     False        None  
0       (4, 4)     False        None  
0       (4, 4)     False        None  
0       (4, 4)     False        None  
0       (4, 2)     False        None  
Pytorch NN pbject created from original NN class. Change            original NN object to change structure.
-----------------------------------------------
Selected results: ConstProp_strategy on TRAINING dataset
W_T_mean: 1261.0933778858873
W_T_median: 1222.5216402372002
W_T_pctile_5: 834.4055321177691
W_T_CVAR_5_pct: 748.3017793876664
-----------------------------------------------
/home/marcchen/Documents/researchcode/fun_construct_Feature_vector.py:82: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  wealth_n = torch.tensor(wealth_n, device=params["device"])
2.0% of gradient descent iterations done. Method = A
objective value function right now is: -881.1266579116171
4.0% of gradient descent iterations done. Method = A
objective value function right now is: -917.264268402954
6.0% of gradient descent iterations done. Method = A
objective value function right now is: -951.7131056819914
8.0% of gradient descent iterations done. Method = A
objective value function right now is: -985.445928501049
10.0% of gradient descent iterations done. Method = A
objective value function right now is: -1015.8990521113824
12.0% of gradient descent iterations done. Method = A
objective value function right now is: -1033.8843378926038
14.000000000000002% of gradient descent iterations done. Method = A
objective value function right now is: -1037.341421052695
16.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4445751607425
18.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4502303961401
20.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4544335768967
22.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4571174491418
24.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4589938305041
26.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4502593297923
28.000000000000004% of gradient descent iterations done. Method = A
objective value function right now is: -1037.455653455392
30.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4607499423205
32.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4540113485145
34.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4620680410262
36.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4580458261178
38.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.45794173031
40.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4515834172498
42.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4602575227823
44.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4639411647279
46.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4620365067638
48.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4622335451031
50.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4598551926797
52.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4693236118235
54.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4660194907353
56.00000000000001% of gradient descent iterations done. Method = A
objective value function right now is: -1037.475414396342
57.99999999999999% of gradient descent iterations done. Method = A
objective value function right now is: -1037.475791526044
60.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4575882208073
62.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4675520427445
64.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.475945868225
66.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4770961294912
68.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.47718503042
70.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4610517104752
72.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4768714064548
74.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4568269555857
76.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4717714333713
78.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4805763951877
80.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4679290980973
82.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4798289219395
84.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.483905027836
86.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4684716540671
88.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.476692331207
90.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4703053081712
92.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4723909574834
94.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4372127595861
96.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4586784078972
98.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4396660058187
100.0% of gradient descent iterations done. Method = A
objective value function right now is: -1037.4973925578936
NN weights: [-0.25342876 -0.3437678   1.1523564  -0.44533074  0.51417834 -1.0200646
 -1.4539908   0.19520126 -0.86359024 -0.18165761 -1.0604792  -1.2750131
  0.30981448  0.2668961  -0.15634754  0.15344888  0.39729026  0.4680244
  0.14431396  0.89428693 -0.67917246 -1.1525018  -0.36868015 -0.0815488
  0.7227248   1.2950096   1.0735233   0.29102254  1.0519124   0.80763906
  0.71338534  1.0222625   0.910518   -0.05638855  0.18502904  0.8075196
  1.6170887   0.28908345  0.5002514   0.34578905 -1.1387484   1.4552807
 -2.2379644   0.56262267 -0.84682703  1.4443477  -3.030989    0.5067401
 -0.5758498   1.0665921  -2.0875494   0.34971437 -0.01627641  1.3194569
 -2.3378744   0.6148976  -0.7221893  -1.5422201   0.43304434 -5.2156405
 -0.5827287   5.121518    0.5866512  -5.133182  ]
Minimum obj value:-1037.4875295970082
Optimal xi: 30.967329
/home/marcchen/Documents/researchcode/fun_train_NN.py:236: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  res_ALL_dataframe = res_ALL_dataframe.append(res_ALL[key]["summary_df"], ignore_index=True)
/home/marcchen/Documents/researchcode/fun_train_NN.py:248: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  res_ALL_dataframe = res_ALL_dataframe.append(res_BEST_temp["summary_df"], ignore_index=True)
-----------------------------------------------
Selected results: NN-strategy-on-TRAINING dataset
W_T_mean: 1055.7549006739503
W_T_median: 1053.3266882149398
W_T_pctile_5: 958.4836866519556
W_T_CVAR_5_pct: 931.9159906856818
F value: -1037.4875295970082
-----------------------------------------------
/home/marcchen/Documents/researchcode/fun_Plot_NN_control_DataHeatmaps.py:157: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.savefig(fig_filename, format=save_Figures_format, bbox_inches="tight")
-----------------------------------------------
Just FINISHED: 
Asset basket ID: basic_T30_VWD
Objective function: mean_cvar_single_level
Tracing param: 0.1
F value: -1037.4875295970082
-----------------------------------------------
