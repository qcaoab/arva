Starting at: 
01-02-23_19:50

 Random seed:  2  

Key parameters-------
paths: 256000
iterations: 40000
batchsize: 1000
remove neg:  False


############# Defined asset basket #################
timeseries_basket.keys() = 
dict_keys(['basket_type', 'basket_id', 'basket_desc', 'basket_label', 'basket_columns', 'basket_timeseries_names'])
timeseries_basket['basket_type'] = asset
timeseries_basket['basket_id'] = B10_and_VWD
timeseries_basket['basket_desc'] = CRSP data: B10 and VWD
timeseries_basket['basket_columns'] = 
['B10_real_ret', 'VWD_real_ret']
############# End: defined asset  basket #################
-----------------------------------------------
No need to read market data.
-----------------------------------------------
Traceback (most recent call last):
  File "/home/marcchen/Documents/pytorch_decumulation_mc/researchcode/decumulation_driver.py", line 575, in <module>
    params = fun_Data__MCsim_wrapper.wrap_run_MCsim(
  File "/home/marcchen/Documents/pytorch_decumulation_mc/researchcode/fun_Data__MCsim_wrapper.py", line 155, in wrap_run_MCsim
    params = fun_Data_MCsim.MCsim(MCsim_info=params["MCsim_info_" + train_test_Flag],
  File "/home/marcchen/Documents/pytorch_decumulation_mc/researchcode/fun_Data_MCsim.py", line 167, in MCsim
    log_jump_mult_sum = func_SimLogJumpMult(NrSims=N_d,
  File "/home/marcchen/Documents/pytorch_decumulation_mc/researchcode/fun_Data_MCsim.py", line 57, in func_SimLogJumpMult
    jump_up_or_down = (np.random.uniform(size=pi_dt[i-1]) <= model_params["nu"])
KeyboardInterrupt
